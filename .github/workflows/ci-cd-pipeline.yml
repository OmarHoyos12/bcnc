name: CI Pipeline

on:
  push:
    branches:
      - master
      - feature/*
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    # ¡Clave! Todas las acciones se ejecutarán en ./coreplatform
    defaults:
      run:
        working-directory: ./coreplatform

    steps:
      # 1. Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: temurin

      # 3. Dar permisos al gradlew (ahora usa ruta relativa)
      - name: Grant Gradle Wrapper permissions
        run: chmod +x gradlew

      # 4. Compilar (usando tareas específicas para evitar el error del mainClass)
      - name: Build and Test
        run: |
          ./gradlew assemble test jacocoTestReport --no-daemon
          
      # 5. Verificar cobertura
      - name: Verify Coverage > 20%
        run: |
          coverage=$(grep -oP '<counter type="INSTRUCTION".*' build/reports/jacoco/test/jacocoTestReport.xml | \
            sed -e 's/.*covered="\([^"]*\)".*missed="\([^"]*\)".*/\1 \2/' | \
            awk '{covered=$1; missed=$2; total=covered+missed; perc=covered*100/total; print perc}')
          echo "Coverage: $coverage%"
          if (( $(echo "$coverage < 20.0" | bc -l) )); then
            echo "ERROR: Cobertura < 20%!"
            exit 1
          fi

      # 6. SonarQube (opcional, si lo necesitas)
      - name: Run Sonar Analysis
        run: ./gradlew sonarqube --no-daemon
